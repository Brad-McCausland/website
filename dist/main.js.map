{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/SlideShowView.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","ReactDOM","render","SlideShowView","width","height","document","getElementById","stateEnum","EMPTY","LOADING","COMPLETE","ERROR","Component","props","super","canvasRef","createRef","errorImage","Image","src","onload","this","displayError","state","readyState","images","currentImageIndex","intervalID","ref","style","backgroundColor","image","length","clearInterval","unshift","callback","canvas","current","context","getContext","clearImages","drawImage","setState"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = React;","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { SlideShowView } from \"./components/SlideShowView\";\r\n\r\nReactDOM.render\r\n(\r\n    <SlideShowView width={600} height={600}/>,\r\n    document.getElementById(\"example\")\r\n);","module.exports = ReactDOM;","import * as React from \"react\";\r\n\r\n/* \r\n * Class SlideShowView encapsulates properties/behaviors that allow for a group of images to be displayed in a\r\n * single element, and to be cycled through by click. The constructor takes a dictionary of values in order to\r\n * provide flexibility when creating the object. Any value not given when instantiating is replaced\r\n * with a default value. To display a SlideShowView, client code must add the SlideShowView's canvas property to the\r\n * document body.\r\n */\r\n\r\nvar stateEnum =\r\n{\r\n    EMPTY: 0,\r\n    LOADING: 1,\r\n    COMPLETE: 2,\r\n    ERROR: 3\r\n};\r\n\r\ninterface SlideShowProps\r\n{\r\n    width: number,\r\n    height: number,\r\n}\r\n\r\ninterface SlideShowState\r\n{\r\n    width: number,\r\n    height: number,\r\n    readyState: number,\r\n    currentImageIndex: number,\r\n    intervalID: number,\r\n    errorImage: HTMLImageElement,\r\n    images: HTMLImageElement[],\r\n}\r\n\r\nexport class SlideShowView extends React.Component<SlideShowProps, SlideShowState>\r\n{\r\n    private canvasRef = React.createRef<HTMLCanvasElement>();\r\n\r\n    constructor(props: SlideShowProps)\r\n    {\r\n        super(props);\r\n\r\n        var errorImage = new Image()\r\n        errorImage.src = \"./src/images/image_load_error.png\";\r\n\r\n        errorImage.onload = () =>\r\n        {\r\n            this.displayError();\r\n        }\r\n\r\n        this.state = \r\n        {\r\n            width: props.width,\r\n            height: props.height,\r\n            readyState: stateEnum.EMPTY,\r\n            images: [],\r\n            currentImageIndex: 0,\r\n            intervalID: 0,\r\n            errorImage: errorImage,\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <canvas ref={this.canvasRef} width={this.state.width} height={this.state.height} style={{backgroundColor: \"#EEEEEE\"}}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    isEmpty(): boolean\r\n    {\r\n        return this.state.readyState === stateEnum.EMPTY;\r\n    }\r\n\r\n    isLoading(): boolean\r\n    {\r\n        return this.state.readyState === stateEnum.LOADING;\r\n    }\r\n\r\n    isComplete(): boolean\r\n    {\r\n        return this.state.readyState === stateEnum.COMPLETE;\r\n    }\r\n\r\n    isError(): boolean\r\n    {\r\n        return this.state.readyState === stateEnum.ERROR;\r\n    }\r\n\r\n    addImage(image: HTMLImageElement): void\r\n    {\r\n        if (!this.state.images.length)\r\n        {\r\n            // Remove loading animation if this is the first time an image is added\r\n            if (this.state.intervalID)\r\n            {\r\n                clearInterval(this.state.intervalID);\r\n            }\r\n        }\r\n        this.state.images.unshift(image);\r\n    }\r\n\r\n    // Loads error image from local storage, pushes it into the slideshow, and displays it\r\n    displayError(callback?: () => void): void\r\n    {\r\n        const canvas = this.canvasRef.current;\r\n        if (canvas)\r\n        {\r\n            const context = canvas.getContext(\"2d\");\r\n            if (context)\r\n            {\r\n                // Remove loading animation\r\n                if (this.state.intervalID)\r\n                {\r\n                    clearInterval(this.state.intervalID);\r\n                }\r\n\r\n                // Clear slideshow\r\n                this.clearImages();\r\n\r\n                // Display error image\r\n                context.drawImage(this.state.errorImage, 0, 0);\r\n                \r\n                this.setState (\r\n                    {\r\n                        readyState: stateEnum.ERROR,\r\n                    }\r\n                )\r\n\r\n                if (callback)\r\n                {\r\n                    callback();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    clearImages(): void\r\n    {\r\n        this.setState (\r\n            {\r\n                images: [],\r\n            }\r\n        )\r\n    }\r\n/*\r\n    // Loads loading animation from local storage and displays it in photo view\r\n    addLoadingAnimation(): void\r\n    {\r\n        this.images = [];\r\n        this.state = stateEnum.LOADING;\r\n\r\n        let loadingImage = new Image();\r\n        loadingImage.src = \"services/image_service/other_images/loading.png\";\r\n\r\n        var loadingAnimation = new AnimatableImage(loadingImage, 0, 12, 256, 256);\r\n\r\n        if (!this.images.length)\r\n        {\r\n            // Center loading image in the loading view\r\n            let width = (this.canvas.width - 256)/2;\r\n            let height = (this.canvas.height - 256)/2;\r\n\r\n            this.intervalID = window.setInterval(this.animateImageInCanvas, 100, this.canvas.getContext(\"2d\"), width, height, loadingAnimation);\r\n        }\r\n    }\r\n\r\n    animateImageInCanvas(context: CanvasRenderingContext2D, x: number, y: number, iobj: AnimatableImage): void\r\n    {\r\n        if (iobj.source != null)\r\n        {\r\n            context.drawImage\r\n            (\r\n                iobj.source,                    // Image object\r\n                iobj.currentFrame * iobj.width, 0,   // Coordinates of top left corner of sub-rectangle (multiply frame count by width to get current frame)\r\n                iobj.width, iobj.height,        // Width and height of sub-rectangle\r\n                x, y,                           // Destination in target canvas\r\n                iobj.width, iobj.height         // Width and height to draw the source at\r\n            );\r\n            // Iterate one frame in image\r\n            iobj.currentFrame = (iobj.currentFrame + 1) % iobj.totalFrames;\r\n        }\r\n    }*/\r\n}\r\n\r\nclass AnimatableImage\r\n{\r\n    source: HTMLImageElement;\r\n    currentFrame: number;\r\n    totalFrames: number;\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor(source: HTMLImageElement, currentFrame: number, totalFrames: number, width: number, height: number)\r\n    {\r\n        this.source = source;\r\n        this.currentFrame = currentFrame;\r\n        this.totalFrames = totalFrames;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n}"],"sourceRoot":""}