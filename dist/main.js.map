{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/SlideShowView.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","WebPage","Component","props","super","image1","Image","image2","image3","src","this","state","images","reserve","SlideShowView","width","height","initWithLoadingAnimation","Button","onClick","setImages","clearImages","newImages","setState","className","ReactDOM","render","document","getElementById","canvasRef","createRef","errorImage","loadingAnimation","currentImageIndex","intervalID","console","log","ref","style","backgroundColor","displayNextImage","prevProps","length","endLoadingAnimation","displayLoadingAnimation","newIndex","displayImage","callback","image","canvas","current","context","getContext","clearCanvas","drawImage","AnimatableImage","window","setInterval","animateImageInCanvas","x","y","iobj","source","currentFrame","totalFrames","clearInterval","clearRect"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = React;","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport { SlideShowView } from \"./components/SlideShowView\";\r\n\r\ninterface WebPageProps\r\n{\r\n\r\n}\r\n\r\n// State defines all private properties\r\ninterface WebPageState\r\n{\r\n    images: HTMLImageElement[],\r\n    reserve: HTMLImageElement[],\r\n}\r\n\r\n\r\nclass WebPage extends React.Component<WebPageProps, WebPageState>\r\n{\r\n    constructor(props: WebPageProps)\r\n    {\r\n        super(props);\r\n        \r\n        var image1 = new Image()\r\n        var image2 = new Image()\r\n        var image3 = new Image()\r\n\r\n        image1.src = \"src/images/portrait.png\"\r\n        image2.src = \"src/images/pano.jpg\"\r\n        image3.src = \"src/images/background.jpg\"\r\n\r\n        this.state =\r\n        {\r\n            images: [],\r\n            reserve: [image1, image2, image3],\r\n        };\r\n    }\r\n\r\n    render()\r\n    {\r\n        const images = this.state.images;\r\n        return (\r\n            <div>\r\n                <SlideShowView width={600} height={600} images={images} initWithLoadingAnimation={true}/>\r\n\r\n                <Button\r\n                    value=\"load images\"\r\n                    onClick={() => this.setImages()}\r\n                />\r\n                <Button\r\n                value=\"clear images\"\r\n                onClick={() => this.clearImages()}\r\n            />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    setImages()\r\n    {\r\n        let newImages = this.state.reserve;\r\n        this.setState (\r\n            {\r\n                images: newImages,\r\n            }\r\n        );\r\n    }\r\n    \r\n    clearImages()\r\n    {\r\n        this.setState (\r\n            {\r\n                images: [],\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\ninterface ButtonProps\r\n{\r\n    value: string,\r\n    onClick: () => void,\r\n}\r\n\r\nfunction Button(props: ButtonProps)\r\n{\r\n    return (\r\n        <button\r\n            className=\"reset_button\"\r\n            onClick={props.onClick}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nReactDOM.render (\r\n    <WebPage />,\r\n    document.getElementById(\"example\")\r\n);","module.exports = ReactDOM;","import * as React from \"react\";\r\n\r\n// Props define elements required to instantiate\r\ninterface SlideShowProps\r\n{\r\n    width: number,\r\n    height: number,\r\n    images: HTMLImageElement[],\r\n    initWithLoadingAnimation: boolean,\r\n}\r\n\r\n// State defines all private properties\r\ninterface SlideShowState\r\n{\r\n    currentImageIndex: number,\r\n    intervalID: number,\r\n}\r\n\r\nexport class SlideShowView extends React.Component<SlideShowProps, SlideShowState>\r\n{\r\n    private canvasRef = React.createRef<HTMLCanvasElement>();\r\n    private errorImage = new Image();\r\n    private loadingAnimation = new Image();\r\n\r\n    render()\r\n    {\r\n        console.log(\"render\");\r\n\r\n        return (\r\n            <div>\r\n                <canvas\r\n                    ref={this.canvasRef}\r\n                    width={this.props.width}\r\n                    height={this.props.height}\r\n                    style={{backgroundColor: \"#EEEEEE\"}} \r\n                    onClick={() => this.displayNextImage()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(prevProps: SlideShowProps)\r\n    {\r\n        console.log(\"component update\");\r\n        if (prevProps.images !== this.props.images)\r\n        {\r\n\r\n            if (this.props.images.length)\r\n            {\r\n                console.log(\"has images, should end animation\");\r\n                this.endLoadingAnimation();\r\n            }\r\n            else\r\n            {\r\n                console.log(\"does not have images, should display animation\");\r\n                this.displayLoadingAnimation();\r\n            }\r\n\r\n            if (this.props.images.length)\r\n            {\r\n                console.log(\"images prop not equal, displaying next image\");\r\n                this.displayNextImage();\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor(props: SlideShowProps)\r\n    {\r\n        super(props);\r\n\r\n        this.errorImage.src = \"./src/images/image_load_error.png\";\r\n        this.loadingAnimation.src = \"./src/images/loading.png\";\r\n\r\n        this.state = \r\n        {\r\n            currentImageIndex: -1,\r\n            intervalID: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        console.log(\"component mount\");\r\n        // Set to loading state if specified by caller\r\n        if (this.props.initWithLoadingAnimation && !this.props.images.length)\r\n        {\r\n            this.displayLoadingAnimation();\r\n        }\r\n    }\r\n\r\n    displayNextImage(): void\r\n    {\r\n        if (this.props.images.length)\r\n        {\r\n            var newIndex = (this.state.currentImageIndex + 1) % this.props.images.length;\r\n\r\n            this.displayImage(this.props.images[newIndex]);\r\n            this.setState (\r\n            {\r\n                currentImageIndex: newIndex,\r\n            });\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Attempted to display next image when no images are loaded!\")\r\n        }\r\n    }\r\n\r\n    // Loads error image from local storage, pushes it into the slideshow, and displays it\r\n    displayError(callback?: () => void): void\r\n    {\r\n        this.displayImage(this.errorImage);\r\n        if (callback)\r\n        {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    // TODO: Replace with something more 'reacty'. Display the current image in a div in render()\r\n    displayImage(image: HTMLImageElement): void\r\n    {\r\n        const canvas = this.canvasRef.current;\r\n        if (canvas)\r\n        {\r\n            const context = canvas.getContext(\"2d\");\r\n            if (context)\r\n            {\r\n                // Clear previous image\r\n                this.clearCanvas();\r\n\r\n                // Display image\r\n                context.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Loads loading animation from local storage and displays it in photo view\r\n    displayLoadingAnimation(): void\r\n    {\r\n        var loadingAnimation = new AnimatableImage(this.loadingAnimation, 0, 12, 256, 256);\r\n\r\n        // Center loading image in the loading view\r\n        let width = (this.props.width - 256)/2;\r\n        let height = (this.props.height - 256)/2;\r\n        \r\n        const canvas = this.canvasRef.current;\r\n        if (canvas)\r\n        {\r\n            const context = canvas.getContext(\"2d\");\r\n            if (context)\r\n            {\r\n                this.clearCanvas();\r\n\r\n                this.setState(\r\n                    {\r\n                        intervalID: window.setInterval(this.animateImageInCanvas, 100, canvas.getContext(\"2d\"), width, height, loadingAnimation)\r\n                    }\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    animateImageInCanvas(context: CanvasRenderingContext2D, x: number, y: number, iobj: AnimatableImage): void\r\n    {\r\n        if (iobj.source != null)\r\n        {\r\n            context.drawImage\r\n            (\r\n                iobj.source,                    // Image object\r\n                iobj.currentFrame * iobj.width, 0,   // Coordinates of top left corner of sub-rectangle (multiply frame count by width to get current frame)\r\n                iobj.width, iobj.height,        // Width and height of sub-rectangle\r\n                x, y,                           // Destination in target canvas\r\n                iobj.width, iobj.height         // Width and height to draw the source at\r\n            );\r\n            // Iterate one frame in image\r\n            iobj.currentFrame = (iobj.currentFrame + 1) % iobj.totalFrames;\r\n        }\r\n    }\r\n\r\n    endLoadingAnimation()\r\n    {\r\n        if (this.state.intervalID)\r\n        {\r\n            clearInterval(this.state.intervalID);\r\n            console.log(\"cleared interval\");\r\n        }\r\n        this.clearCanvas();\r\n    }\r\n\r\n    clearCanvas()\r\n    {\r\n        const canvas = this.canvasRef.current;\r\n        if (canvas)\r\n        {\r\n            const context = canvas.getContext(\"2d\");\r\n            if (context)\r\n            {\r\n                console.log(\"canvas cleared\");\r\n                context.clearRect(0, 0, canvas.width, canvas.height)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass AnimatableImage\r\n{\r\n    source: HTMLImageElement;\r\n    currentFrame: number;\r\n    totalFrames: number;\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor(source: HTMLImageElement, currentFrame: number, totalFrames: number, width: number, height: number)\r\n    {\r\n        this.source = source;\r\n        this.currentFrame = currentFrame;\r\n        this.totalFrames = totalFrames;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n}"],"sourceRoot":""}